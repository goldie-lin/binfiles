#!/usr/bin/env bash
# Author: Goldie Lin
# Description: Traversal of all *included* DTSI/H for a specific Linux kernel DTS/DTSI.
# Usage: kernel-dtsi-traversal <dts/dtsi-file>
# Requirement: Git-controlled kernel source tree, i.e., has a ".git" folder in the project root.

set -euo pipefail

# variable definitions
# ====================

declare -g git_dir=""
declare -g dt_bindings_inc_dir=""  # "dt-bindings".
declare -g indent_chars="  "  # one indent = two space.

# Function definitions
# ====================

expand_lvl_to_indents() {
  local -i lvl="$1"
  local -i i=0

  for ((i=0; i<lvl; i++)); do
    echo -n "${indent_chars}"
  done
}

# down search recursively, likes dfs.
down_search() {
  local -ri lvl="$1"
  local -ri type="$2"
  local -r parent="$3"
  local parent_name=""
  local parent_dir=""
  local -i child_type=1
  local -i i=0
  local -a siblings=()
  local -a bindings=()
  local j=""

  [[ -f "${parent}" ]] || (echo >&2 "Error: '${parent}' does not existed!" && return 1)

  parent_name="$(basename "${parent}")"
  parent_dir="$(readlink -f "$(dirname "${parent}")")"

  # pattern: include "..."
  while IFS= read -r j; do
    siblings[i++]="$j"
  done < <(grep -P '^\s*(#include|\/include\/)\s+' "${parent}" | grep -Po '(?<=["])([^"]+)(?=["])')

  # pattern: include <...>
  while IFS= read -r j; do
    bindings[i++]="$j"
  done < <(grep -P '^\s*(#include|\/include\/)\s+' "${parent}" | grep -Po '(?<=[/<])([^<>]+)(?=[/>])')

  # show myself.
  if [[ "${type}" -eq 2 ]]; then
    echo "$(expand_lvl_to_indents "$lvl")* <${parent_name}>"
  else  # default: 1
    echo "$(expand_lvl_to_indents "$lvl")* \"${parent_name}\""
  fi

  # recursively search.
  if [[ "${#siblings[@]}" -gt 0 ]]; then
    child_type=1
    for ((i=0; i<${#siblings[@]}; i++)); do
      down_search "$(( lvl+1 ))" "${child_type}" "${parent_dir}/${siblings[$i]}"
    done
  elif [[ "${#bindings[@]}" -gt 0 ]]; then
    child_type=2
    for ((i=0; i<${#bindings[@]}; i++)); do
      down_search "$(( lvl+1 ))" "${child_type}" "${dt_bindings_inc_dir}/${bindings[$i]}"
    done
  fi
}

main() {
  local -i lvl=0
  local -i type=1
  local parent="$1"
  local parent_name=""
  local parent_dir=""

  [[ -f "${parent}" ]] || (echo >&2 "Error: '${parent}' does not existed!" && return 2)
  [[ "${parent##*.}" =~ ^(dts|dtsi)$ ]] || (echo >&2 "Error: '${parent}' not a dts/dtsi file!" && return 3)

  parent="$(readlink -f "${parent}")"  # relocate myself.
  parent_name="$(basename "${parent}")"
  parent_dir="$(readlink -f "$(dirname "${parent}")")"

  # setup global vars.
  git_dir="$(git -C "${parent_dir}" rev-parse --show-toplevel)"
  dt_bindings_inc_dir="${git_dir}/include"

  down_search "${lvl}" "${type}" "${parent}"
}

main "$@"
